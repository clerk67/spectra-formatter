!function(t){var e={};function r(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e){window.SpectraFormatter={format:function(t){if(!t||!t.data)return{error:"INVALID_INPUT"};const e=t.data;if(t.nuc&&!t.nuc.match(/^\d+[A-Za-z]+$/))return{error:"INVALID_NUCLEUS"};const r=t.nuc;if(t.freq&&(isNaN(t.freq)||t.freq<=0))return{error:"INVALID_FREQUENCY"};const i=t.freq?t.freq:400,o=t.area?1:0;let a=t.solvent?t.solvent:"CDCl3";if(a=a.replace(/\d+/g,"<sub>$&</sub>").replace(/-d/,"-<em>d</em>"),t.digits&&(isNaN(t.digits)||t.digits<=0))return{error:"INVALID_DIGITS_OF_CHEMICAL_SHIFTS"};const n=t.digits?t.digits:2;if(t.ccDigits&&(isNaN(t.ccDigits)||t.ccDigits<=0))return{error:"INVALID_DIGITS_OF_COUPLING_CONSTANTS"};const s=t.ccDigits?t.ccDigits:1,l=e.split("\n"),F=[];for(let t=0;t<l.length;t++){if(""==l[t]&&t<l.length-1)return{error:"EMPTY_LINE_FOUND"};if(""==l[t]&&t==l.length-1)return!0;F[t]=l[t].split(",");for(let e=0;e<F[t].length;e++){if(""==F[t][e])return{error:"INVALID_COMMAS_FOUND"};if(isNaN(F[t][e])&&-1==F[t][e].indexOf("~"))return{error:"NON_NUMERIC_CHARACTERS_FOUND"};if(F[t][e]>1e3||F[t][e]<-1e3)return{error:"EXTRAORDINARY_VALUES_FOUND"}}if(o&&F[t][0]!=parseInt(F[t][0]))return{error:"AREA_RATIO_NOT_FOUND"};if(0==o&&-1==F[t][0].indexOf("."))return{error:"INVALID_AREA_RATIO_FOUND"}}return{error:null,output:function(t,e,r,i,o,a,n,s){const l=e.match(/^(\d+)/)[1],F=e.match(/([A-Za-z]+)$/)[1],p=t.split("\n"),u=[];let c="<b><sup>"+l+"</sup>"+F+" NMR</b> ("+i+" MHz, "+o+") &#948 ";for(let t=0;t<p.length;t++)if(u[t]=p[t].split(","),u[t].length===r+1)-1===u[t][r].indexOf("~")?(c+=parseFloat(u[t][r]).toFixed(a),s?(c+=" (s",r&&(c+=", "+u[t][0]+F),c+=")"):r&&(c+=" ("+u[t][0]+F+")"),c+=", "):(c+=parseFloat(u[t][r].split("~")[0]).toFixed(a)+"-"+parseFloat(u[t][r].split("~")[1]).toFixed(a)+" (m",r&&(c+=", "+u[t][0]+F),c+="), ");else if(u[t].length===r+2)c+=((parseFloat(u[t][r])+parseFloat(u[t][r+1]))/2).toFixed(a)+" (d",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+((u[t][r]-u[t][r+1])*i).toFixed(n)+" Hz), ";else if(u[t].length===r+3)c+=((parseFloat(u[t][r])+parseFloat(u[t][r+1])+parseFloat(u[t][r+2]))/3).toFixed(a)+" (t",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+((u[t][r]-u[t][r+2])/2*i).toFixed(n)+" Hz), ";else if(u[t].length===r+4){c+=((parseFloat(u[t][r])+parseFloat(u[t][r+1])+parseFloat(u[t][r+2])+parseFloat(u[t][r+3]))/4).toFixed(a);const e=(u[t][r]-u[t][r+1])*i,o=(u[t][r+1]-u[t][r+2])*i;Math.abs(e-o)>1?(c+=" (dd",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+(parseFloat(e)+parseFloat(o)).toFixed(n)+", "+e.toFixed(n)+" Hz), "):(c+=" (q",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+e.toFixed(n)+" Hz), ")}else if(u[t].length===r+5)c+=((parseFloat(u[t][r])+parseFloat(u[t][r+1])+parseFloat(u[t][r+2])+parseFloat(u[t][r+3])+parseFloat(u[t][r+4]))/5).toFixed(a)+" (quint",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+((u[t][r]-u[t][r+4])/4*i).toFixed(n)+" Hz), ";else if(u[t].length===r+6){c+=((parseFloat(u[t][r])+parseFloat(u[t][r+1])+parseFloat(u[t][r+2])+parseFloat(u[t][r+3])+parseFloat(u[t][r+4])+parseFloat(u[t][r+5]))/6).toFixed(a);const e=(u[t][r]-u[t][r+1])*i,o=(u[t][r+1]-u[t][r+2])*i;Math.abs(e-o)>1?(c+=" (td",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+(parseFloat(e)+parseFloat(o)).toFixed(n)+", "+e.toFixed(n)+" Hz), "):(c+=" (dt",r&&(c+=", "+u[t][0]+F),c+=", <i>J</i> = "+((u[t][r]-u[t][r+3])*i).toFixed(n)+", "+e.toFixed(n)+" Hz), ")}return c.substring(0,c.length-2)+";"}(e,r,o,i,a,n,s,t.printSingletMultiplicity)}}}}]);